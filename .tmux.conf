# .tmux.conf

# base configuration
set -g allow-rename off                      # I like labels
set -g base-index 1                          # windows start at 1
set -g default-terminal "xterm-256color"     # enable 256 colors
set -g escape-time 1                         # faster command sequences
set -g history-limit 102400
set -g monitor-activity no                   # privacy /s
set -g pane-base-index 1                     # panes starts at 1
set -g prefix c-a                            # change main prefix to ctrl-a
set -g prefix2 '`'                           # add another prefix to tilde
set -g renumber-windows on                   # renumber windows upon change
set -g repeat-time 200                       # tuned to perfection
set -g status-interval 60                    # Update status line every X seconds
set -g terminal-overrides 'xterm:colors=256' # force 256 colors
setw -g automatic-rename off
setw -g mode-keys vi
setw -g xterm-keys on                        # additional key mapping

# general bindings
bind '`' send-prefix -2                 # secondary prefix
bind -n 'C-\' next-layout               # cycle through layouts
bind -n C-f copy-mode \; send-key ?     # search mode
bind b list-buffers                     # list paste buffers
bind c-a last-window                    # jump back and forth
bind C-l send-keys C-l \; clear-history # clear scrollback buffer
bind C-s setw synchronize-pane          # toggle input to all panes
bind C-X kill-server                    # exit tmux
bind Enter copy-mode                    # copy mode (vi controls)
bind P choose-buffer                    # choose which buffer to paste from
bind p paste-buffer                     # paste from the top paste buffer
bind R respawn-pane -k                  # start anew
bind X kill-window
bind x kill-pane

# window management
bind % split-window -h -c "#{pane_current_path}"   # split horizontally while retaining path
bind _ split-window -h -c -                        # split horizontally
bind '"' split-window -v -c "#{pane_current_path}" # split vertically while retaining path
bind - split-window -c -                           # split vertically
bind c new-window -c "#{pane_current_path}"

# window resizing
bind -n C-M-h resize-pane -L 2
bind -r H resize-pane -L 2
bind -n C-M-j resize-pane -D 2
bind -r J resize-pane -D 2
bind -n C-M-k resize-pane -U 2
bind -r K resize-pane -U 2
bind -n C-M-l resize-pane -R 2
bind -r L resize-pane -R 2

# navigation
bind -n M-[ previous-window
bind -r [ previous-window
bind -n M-] next-window
bind -r ] next-window
bind -n M-h select-pane -L
bind -r h select-pane -L
bind -n M-j select-pane -D
bind -r j select-pane -D
bind -n M-k select-pane -U
bind -r k select-pane -U
bind -n M-l select-pane -R
bind -r l select-pane -R

# Get version
run-shell 'tmux setenv -g TMUX_VERSION $(tmux -V | \
  sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

# Set default shell
if-shell -b '[ "$(uname | grep -q Darwin)" ]' \
  "set-option -g default-shell /bin/zsh"
if-shell -b '[ "$(uname | grep -q Linux)" ]' \
  "set-option -g default-shell /bin/bash"

# Mouse mode
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.1" | bc)" = 1 ]' " \
 set -g mouse-resize-pane on; \
 set -g mouse-select-pane on; \
 set -g mouse-select-window on; \
 set -g mode-mouse on; \
 set-option -g pane-active-border-fg '#ffa827'"
if-shell -b '[ "$(echo "$TMUX_VERSION > 2.0" | bc)" = 1 ]' " \
 set -g mouse on; \
 set-option -g pane-active-border-style 'fg=#ffa827'"
bind M \
  setw -g mode-mouse on \;\
  set-option -g mouse-resize-pane on \;\
  set-option -g mouse-select-pane on \;\
  set-option -g mouse-select-window on \;\
  display-message 'Mouse: ON'
bind m \
  setw -g mode-mouse off \;\
  set-option -g mouse-resize-pane off \;\
  set-option -g mouse-select-pane off \;\
  set-option -g mouse-select-window off \;\
  display-message 'Mouse: OFF'


# Capture pane and open in Vim
bind C-c run 'FILE=/tmp/tmux-capture-$(date +%Y%m%d%H%M%S).txt; tmux capture-pane -J -S -102400 -p > $FILE; tmux new-window "reattach-to-user-namespace vim $FILE"'

# Edit config
bind e new-window -n '~/.tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\"'"

# Reload config
bind r source-file ~/.tmux.conf \; display-message "Reloaded!"

# Copy and paste (Source: gpakosz/.tmux)
run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'
# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'

# Color key:
#   #1d1f21 Background
#   #282a2e Current Line
#   #373b41 Selection
#   #c6c8c6 Foreground
#   #969896 Comment
#   #cc6666 Red
#   #de935f Orange
#   #f0c674 Yellow
#   #b5bd68 Green
#   #8abeb7 Aqua
#   #81a2be Blue
#   #b294bb Purple

# set clock mode
set -g clock-mode-colour "#ffa827"
set -g clock-mode-style 24

# set status bar
set -g status-bg default

# tabs of status bar
setw -g window-status-format "#[bg=#default]#[fg=#222222] #I #[bg=default]#[fg=#666666] #W "
setw -g window-status-current-format "#[bg=#222222]#[fg=cyan,bold] #I#[fg=white,bold] #[bg=#222222]#W#[fg=cyan]* "

# left side of status bar
set -g status-left ''

# right side of status bar holds "[host name] (date time)"
set -g status-right-length 100
set -g status-right '#[fg=#666666,bg=default] #H #[fg=white,bg=#222222] %h %d %H:%M '
