# yaml-language-server: $schema=https://taskfile.dev/schema.json

tasks:
  configure:
    cmds:
      - task: configure-sudoers
      - task: configure-terminal
      - task: configure-firefox

  configure-firefox:
    cmd: |
      WSLPATH=$(wslpath -w ~/.jsh/configs/user.js)
      PROFILE_DIR=$(ls -d /mnt/c/Users/jay/AppData/Roaming/Mozilla/Firefox/Profiles/*default-release 2>/dev/null | head -1)
      if [ -z "$PROFILE_DIR" ]; then
        echo "Error: Could not find Firefox default-release profile"
        exit 1
      fi
      PROFILE_NAME=$(basename "$PROFILE_DIR")
      PROFILE_DIR_WIN=$(wslpath -w "$PROFILE_DIR")
      WINPATH="$PROFILE_DIR_WIN\\user.js"
      echo "Found Firefox profile: $PROFILE_NAME"
      echo "Creating symlink: $WINPATH -> $WSLPATH"
      powershell.exe -NoProfile -ExecutionPolicy Bypass -Command "Start-Process powershell -ArgumentList '-NoProfile -ExecutionPolicy Bypass -Command \"New-Item -ItemType SymbolicLink -Path ''$WINPATH'' -Target ''$WSLPATH'' -Force\"' -Verb RunAs -Wait"
      echo ""
      echo "Validating symlink..."
      LINK_INFO=$(powershell.exe -NoProfile -Command "Get-Item '$WINPATH' | Select-Object LinkType, Target | Format-List" 2>&1)
      if echo "$LINK_INFO" | grep -q "SymbolicLink"; then
        echo "✓ Symlink created successfully"
        echo "$LINK_INFO"
        # Test if file is readable
        if powershell.exe -NoProfile -Command "Test-Path '$WINPATH'" | grep -q "True"; then
          echo "✓ Symlink is readable by Windows applications"
        else
          echo "✗ Warning: Symlink exists but may not be readable"
        fi
      else
        echo "✗ Error: Symlink validation failed"
        exit 1
      fi
    desc: Create symlink for Firefox user.js (requires elevation)

  configure-sudoers:
    cmd: |
      USERNAME=$(whoami)
      if [ "$USERNAME" = "root" ]; then
        echo "Error: Running as root is not supported/applicable."
        exit 1
      fi
      SUDOERS_LINE="$USERNAME ALL=(ALL) NOPASSWD:ALL"
      SUDOERS_FILE="/etc/sudoers.d/$USERNAME"
      if ! sudo grep -Fxq "$SUDOERS_LINE" "$SUDOERS_FILE"; then
        echo "$SUDOERS_LINE" | sudo tee "$SUDOERS_FILE"
        sudo chmod 0440 "$SUDOERS_FILE"
        echo "Sudoers configured for $USERNAME with no password prompt."
      else
        echo "Sudoers already configured for $USERNAME."
      fi

  configure-terminal:
    cmd: |
      WSLPATH=$(wslpath -w ~/.config/windows-terminal/settings.json)
      powershell.exe -NoProfile -ExecutionPolicy Bypass -Command "Copy-Item -Path '$WSLPATH' -Destination \"\$([Environment]::GetEnvironmentVariable('LOCALAPPDATA'))\\Packages\\Microsoft.WindowsTerminal_8wekyb3d8bbwe\\LocalState\\settings.json\" -Force"

  default:
    cmds:
      - task: configure
      - task: install

  install:
    cmds:
      - task: install-apps
      - task: install-nerd-fonts

  install-apps:
    cmd: powershell.exe -NoProfile -ExecutionPolicy Bypass -Command 'Start-Process -FilePath "winget" -ArgumentList "install {{range .apps}}{{.}} {{end}}" -Verb RunAs -Wait'

  install-nerd-fonts:
    cmd: powershell.exe -NoProfile -ExecutionPolicy Bypass -Command 'Start-Process powershell -ArgumentList "refreshenv; choco install {{range .fonts}}nerd-fonts-{{.}} {{end}} -y" -Verb RunAs -Wait'
    status:
      - |
        {{range .fonts}}
        ls /mnt/c/Windows/Fonts | grep -qi "{{.}}"
        {{end}}

vars:
  apps:
    - Chocolatey.Chocolatey
    - Doist.Todoist
    - Git.Git
    - Microsoft.PowerToys
    - Microsoft.VisualStudioCode
    - Microsoft.WindowsTerminal
    - Mozilla.Firefox
    - Rufus.Rufus
    - Syncthing.Syncthing
    - Zoom.Zoom
    - mpv.net
  fonts:
    - FiraCode
    - JetBrainsMono
    - MesloLGS

version: 3
